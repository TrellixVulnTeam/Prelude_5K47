# Copyright (c) 2018 The Prelude Authors.
# Use of this source code is governed by MIT license that can be
# found in MIT-LICENSE file.

import("//services/service_manager/public/cpp/service.gni")
import("//services/service_manager/public/service_manifest.gni")
import("//services/catalog/public/tools/catalog.gni")
import("//tools/grit/grit_rule.gni")

group("client_with_resource") {
  deps = [
    ":executable_client_with_resource"
  ]
}

executable("executable_client_with_resource") {
  sources = ["executable_client_with_res.cpp"]
  deps = [
    "//prelude/excerpt04_service/interfaces",
    "//base",
    "//mojo/edk/system",
    "//mojo/public/cpp/bindings",
    "//mojo/public/cpp/system",
    "//services/service_manager/background:lib",
    "//services/service_manager/public/interfaces",
    "//ui/base",  # for resource bundle
    ":executable_client_with_resource_catalog",
    ":copy_logger_service_resource"
  ]
  data_deps = [
    "//prelude/excerpt04_service/multi_class_service_impl:multi_class_service"
  ]
}

service_manifest("executable_client_with_resource_manifest") {
  name = "executable_client_with_res"
  source = "manifest.json"
}

catalog("executable_client_with_resource_catalog") {
  embedded_services = [":executable_client_with_resource_manifest"]
  standalone_services = [ "//prelude/excerpt04_service/multi_class_service_impl:manifest" ]
}

grit("logger_service_resource") {
  source = "logger_service_resource.grd"
  source_is_generated = true
  outputs = [
    "logger_resource.h",
    "logger_resource.pak", ]
  grit_flags = [
    "-E",
    "root_gen_dir=" + rebase_path(root_gen_dir, root_build_dir),
  ]
  #deps = [ ":manifest" ]
}

copy("copy_logger_service_resource") {
  sources = [ "$target_gen_dir/logger_resource.pak", ]
  outputs = [ "$root_out_dir/logger_resource.pak", ]
  public_deps = [ ":logger_service_resource" ]
}


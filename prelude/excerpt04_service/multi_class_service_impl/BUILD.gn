# Copyright (c) 2018 The Prelude Authors.
# Use of this source code is governed by MIT license that can be
# found in MIT-LICENSE file.

import("//services/service_manager/public/cpp/service.gni")
import("//services/service_manager/public/service_manifest.gni")

# for unit tests
import("//services/catalog/public/tools/catalog.gni")
import("//services/service_manager/public/tools/test/service_test.gni")

group("multi_class_service_impl") {
  testonly = true
  deps = [
    ":multi_class_service_unittests",
  ]
}

####### service #######
# this target will be built as a data_deps of the unit test target
source_set("lib") {
  public = [
    "logger_impl.h",
    "service_impl.cpp"
  ]
  sources = [
    "logger_impl.cpp",
    "service_impl.cpp"
  ]

  public_deps = [
    "//base",
    "//services/service_manager/public/cpp",
  ]
}

# service name (i.e., multi_class_service must match the string in constants.mojom, and the name used in manifest below)
service("multi_class_service") {
  sources = [
    "multi_class_service_main.cpp",
  ]
  deps = [
    ":lib",
    "//prelude/excerpt04_service/interfaces",
    "//services/service_manager/public/cpp",
  ]
}

service_manifest("manifest") {
  name = "multi_class_service"
  source = "multi_class_service_manifest.json"
}

####### unit tests #######
service_test("multi_class_service_unittests") {
  sources = [
    "multi_class_service_unittests.cpp",
  ]
  deps = [
    "//prelude/excerpt04_service/interfaces",     # required, otherwise link error
    "//testing/gtest",
    "//services/service_manager/public/cpp:service_test_support",
  ]
  data_deps = [":multi_class_service"]
  catalog = ":multi_class_service_unittests_catalog"
}

service_manifest("unittests_manifest") {
  name = "multi_class_service_unittests"
  source = "multi_class_service_unittests_manifest.json"
}

catalog("multi_class_service_unittests_catalog") {
  testonly = true
  embedded_services = [ ":unittests_manifest" ]
  standalone_services = [ ":manifest" ]
}
